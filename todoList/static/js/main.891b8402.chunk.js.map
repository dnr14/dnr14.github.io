{"version":3,"sources":["component/styled.ts","component/Header.tsx","helpers/cryto.ts","helpers/storageUtils.ts","component/Item.tsx","component/Modal.tsx","component/Main.tsx","App.tsx","index.tsx"],"names":["SIZE","mobile","tab","colorWhite","colorBrandSaturationFull","colorBrandSaturationHalf","justifyAlign","justify","align","css","GlobalStyle","createGlobalStyle","normalize","Wrapper","styled","div","Title","HeaderWrap","header","DateContent","span","isBold","MainWrap","main","MainInput","input","ItemWrap","isDone","FillerButton","button","isSelected","ModalWrap","visible","ModalInnerWrap","ModalFooter","footer","DAYS","TEXT","toDay","Date","Header","toDayMap","toDayArray","push","getFullYear","getMonth","getDate","getDay","get_YYDDMMDAY","map","date","idx","decrypt","text","key","bytes","CryptoJS","AES","JSON","parse","toString","enc","Utf8","error","console","store","localStorage","getItem","setItem","value","hasKeys","hasOwnProperty","timer","Item","done","id","updateSet","setTodoArray","handlClickUpdate","labelChecked","useRef","useState","isChecked","setIsChecked","type","onChange","current","add","checked","clearTimeout","setTimeout","defaultChecked","ref","readOnly","onClick","prevArray","filter","item","Modal","isOpne","delay","setIsOpne","render","children","triggerRef","setVisible","useEffect","Prev","BTNS","ITEM","Set","SECRET_KEY","process","LOCALSTORAGE_NAME","Main","firstDecodedArray","useMemo","getDecodedArray","initialValue","txet","length","getInitialValue","todoArray","setFilter","isOpen","setIsOpen","mainInputRef","nextId","isEnter","makeLocalStorage","useCallback","stringify","window","addEventListener","data","encodedArray","encrypt","btn","forEach","clear","close","cb","className","onKeyPress","e","blur","placeholder","maxLength","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.891b8402.chunk.js","sourcesContent":["import styled, { createGlobalStyle, css } from \"styled-components\";\r\nimport { normalize } from \"styled-normalize\";\r\n\r\nconst SIZE = {\r\n  mobile: 512,\r\n  tab: 768,\r\n};\r\n\r\nconst mobile = () => `@media only screen and (max-width: ${SIZE.mobile}px)`;\r\nconst tab = () => `@media only screen and (max-width: ${SIZE.tab}px)`;\r\nconst colorWhite = () => `#fff`;\r\nconst colorBrandSaturationFull = () => `rgba(46, 204, 113, 1)`;\r\nconst colorBrandSaturationHalf = () => `rgba(46, 204, 113, 0.5)`;\r\nconst justifyAlign: JustifyAlignFn = (justify, align) => css`\r\n  display: flex;\r\n  justify-content: ${justify};\r\n  align-items: ${align};\r\n`;\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n  *, *::before, *::after {\r\n    box-sizing: border-box;\r\n  }\r\n  html{\r\n    ${mobile}{\r\n      font-size: 20px;\r\n    }\r\n  }\r\n\r\n  body {\r\n    line-height: 1.5;\r\n    font-family: 'Ubuntu Mono', monospace;\r\n  }\r\n\r\n  h2, p {\r\n    margin: 0;\r\n  }\r\n\r\n  h2 {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  p {\r\n    font-size: 1rem;\r\n  }\r\n\r\n`;\r\n\r\nexport default GlobalStyle;\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  ${justifyAlign(\"unset\", \"center\")}\r\n  flex-direction: column;\r\n  max-width: 500px;\r\n  margin: auto;\r\n  margin-top: 100px;\r\n  background-color: ${colorWhite};\r\n  box-shadow: rgba(0, 0, 0, 0.02) 0px 1px 3px 0px,\r\n    rgba(27, 31, 35, 0.15) 0px 0px 0px 1px;\r\n  border-radius: 5px;\r\n  min-width: 360px;\r\n  ${tab} {\r\n    width: 80%;\r\n  }\r\n  ${mobile} {\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 2.5rem;\r\n  text-align: center;\r\n  padding: 20px 10px 5px 10px;\r\n  background-color: ${colorBrandSaturationFull};\r\n  border-top-right-radius: 5px;\r\n  border-top-left-radius: 5px;\r\n  color: ${colorWhite};\r\n\r\n  ${tab} {\r\n    font-size: 1.5rem;\r\n    & > span {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const HeaderWrap = styled.header`\r\n  width: 100%;\r\n  background-color: ${colorBrandSaturationFull};\r\n  ${justifyAlign(\"unset\", \"unset\")}\r\n  flex-direction: column;\r\n\r\n  & > div:nth-child(2) {\r\n    margin-left: 45px;\r\n    padding: 5px 0px 10px 0px;\r\n    ${tab} {\r\n      width: 80%;\r\n      margin: 0 auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const DateContent = styled.span<{ isBold: boolean }>`\r\n  font-weight: ${({ isBold }) => isBold && `900`};\r\n  font-size: 1rem;\r\n  & + & {\r\n    margin-left: 10px;\r\n  }\r\n\r\n  ${tab} {\r\n    font-size: 0.7rem;\r\n  }\r\n`;\r\n\r\nexport const MainWrap = styled.main`\r\n  width: 100%;\r\n  padding: 10px;\r\n\r\n  & > div:nth-child(n + 2) {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport const MainInput = styled.input`\r\n  width: 100%;\r\n  padding: 5px 5px 5px 15px;\r\n  line-height: 1.5rem;\r\n  border-radius: 2px;\r\n  outline: none;\r\n  border: 1px solid #333;\r\n\r\n  ${tab} {\r\n    font-size: 0.8rem;\r\n    &::placeholder {\r\n      font-size: 0.8rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ItemWrap = styled.div<{ isDone: boolean }>`\r\n  position: relative;\r\n  & + & {\r\n    margin-top: 5px;\r\n  }\r\n\r\n  & > svg {\r\n    display: none;\r\n    position: absolute;\r\n    right: 5px;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n    cursor: pointer;\r\n\r\n    &:active {\r\n      filter: invert(59%) sepia(85%) saturate(388%) hue-rotate(93deg)\r\n        brightness(95%) contrast(88%);\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    & > svg {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  label {\r\n    display: block;\r\n    cursor: pointer;\r\n    padding-left: 10px;\r\n\r\n    & > input {\r\n      vertical-align: middle;\r\n      width: 20px;\r\n      height: 20px;\r\n      margin-left: 10px;\r\n    }\r\n\r\n    & > span {\r\n      vertical-align: middle;\r\n      margin-left: 5px;\r\n    }\r\n\r\n    & > span:first-child {\r\n      display: inline-block;\r\n      width: 25px;\r\n      margin: 0;\r\n      text-align: center;\r\n      font-weight: 900;\r\n    }\r\n    & > span:last-child {\r\n      text-decoration: ${({ isDone }) => isDone && \"line-through\"};\r\n    }\r\n\r\n    &:hover {\r\n      background-color: ${colorBrandSaturationHalf};\r\n\r\n      & > span:last-child {\r\n        text-decoration: line-through;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FillerButton = styled.button<{ isSelected: boolean }>`\r\n  cursor: pointer;\r\n  border: 1px solid #333;\r\n  padding: 2px 5px;\r\n  background-color: ${colorWhite};\r\n  border-radius: 2px;\r\n  font-size: 0.9rem;\r\n  & + & {\r\n    margin-left: 5px;\r\n  }\r\n\r\n  ${({ isSelected }) =>\r\n    isSelected &&\r\n    css`\r\n      background-color: ${colorBrandSaturationFull};\r\n      color: ${colorWhite};\r\n      font-weight: 900;\r\n      border-color: ${colorBrandSaturationFull};\r\n    `};\r\n`;\r\n\r\nexport const ModalWrap = styled.div<{ visible: boolean }>`\r\n  position: fixed;\r\n  background-color: rgba(149, 165, 166, 0.5);\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  z-index: 1;\r\n  opacity: 0;\r\n  transition: opacity 1s ease-in;\r\n\r\n  ${({ visible }) =>\r\n    visible &&\r\n    css`\r\n      opacity: 1;\r\n    `};\r\n`;\r\n\r\nexport const ModalInnerWrap = styled.div<{ visible: boolean }>`\r\n  width: 300px;\r\n  height: 120px;\r\n  min-width: 200px;\r\n  background-color: white;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  left: 0;\r\n  right: 0;\r\n  margin: auto;\r\n  box-shadow: rgba(0, 0, 0, 0.16) 0px 1px 4px;\r\n  transition: transform 1s ease-in;\r\n  transform: translateY(300px);\r\n\r\n  ${({ visible }) =>\r\n    visible &&\r\n    css`\r\n      transform: translateY(150px);\r\n    `};\r\n\r\n  & > div {\r\n    position: absolute;\r\n    top: 30px;\r\n    right: 0;\r\n    left: 0;\r\n    width: 90%;\r\n    margin: auto;\r\n    font-size: 1rem;\r\n    text-align: center;\r\n    font-weight: bold;\r\n    & > span {\r\n      display: block;\r\n    }\r\n  }\r\n`;\r\nexport const ModalFooter = styled.footer`\r\n  background-color: transparent;\r\n  padding: 10px;\r\n  position: absolute;\r\n  bottom: 0;\r\n  ${justifyAlign(\"center\", \"unset\")}\r\n\r\n  & > button {\r\n    padding: 5px 10px;\r\n    background-color: ${colorBrandSaturationFull};\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n    border: none;\r\n    border-radius: 2px;\r\n    color: ${colorWhite};\r\n    &:hover {\r\n      background-color: ${colorBrandSaturationHalf};\r\n    }\r\n  }\r\n`;\r\n\r\n// 애니메이션\r\n// const fadeIn = keyframes`\r\n//   from{\r\n//     opacity:0;\r\n//   }\r\n\r\n//   to{\r\n//     opacity:1;\r\n//   }\r\n// `;\r\n\r\n// const fadeOut = keyframes`\r\n//   from{\r\n//     opacity:1;\r\n//   }\r\n\r\n//   to{\r\n//     opacity:0;\r\n//   }\r\n// `;\r\n\r\n// const slideUp = keyframes`\r\n//   from{\r\n//     transform:translateY(300px);\r\n//   }\r\n//   to{\r\n//     transform:translateY(150px);\r\n//   }\r\n// `;\r\n// const slideDown = keyframes`\r\n//   from{\r\n//     transform:translateY(300px);\r\n//   }\r\n//   to{\r\n//     transform:translateY(150px);\r\n//   }\r\n// `;\r\n","import { HeaderWrap, DateContent, Title } from \"./styled\";\r\n\r\nconst DAYS = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\"];\r\nconst TEXT = [\"년\", \"월\", \"일\", \"요일😀\"];\r\nconst toDay = new Date();\r\n\r\nconst get_YYDDMMDAY = () => {\r\n  const toDayArray = [];\r\n  toDayArray.push(toDay.getFullYear());\r\n  toDayArray.push(toDay.getMonth() + 1);\r\n  toDayArray.push(toDay.getDate());\r\n  toDayArray.push(DAYS[toDay.getDay()]);\r\n\r\n  return toDayArray;\r\n};\r\n\r\nconst Header = () => {\r\n  const toDayMap = get_YYDDMMDAY();\r\n  return (\r\n    <HeaderWrap>\r\n      <Title>\r\n        <span>👨‍💻 어제보다</span>\r\n        <span>한 걸음 더</span>\r\n      </Title>\r\n      <div>\r\n        {toDayMap.map((date, idx) => (\r\n          <DateContent isBold key={idx}>{`${date}${TEXT[idx]}`}</DateContent>\r\n        ))}\r\n      </div>\r\n    </HeaderWrap>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import CryptoJS from \"crypto-js\";\r\n\r\nexport const encrypt = (data: Item[], key: string) => {\r\n  return CryptoJS.AES.encrypt(JSON.stringify(data), key).toString();\r\n};\r\n\r\nexport const decrypt = (text: string, key: string): Item[] => {\r\n  try {\r\n    const bytes = CryptoJS.AES.decrypt(text, key);\r\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\r\n  } catch (error) {\r\n    console.error(error);\r\n    return [];\r\n  }\r\n};\r\n","type PropertyKey = string | number | symbol;\r\nconst store: Storage = localStorage;\r\n\r\nexport const getItem = (key: string): string => {\r\n  return store.getItem(key) ?? \"\";\r\n};\r\n\r\nexport const setItem = (key: string, value: string): void =>\r\n  store.setItem(key, value);\r\n\r\nexport const hasKeys = (key: PropertyKey): boolean => store.hasOwnProperty(key);\r\n","import React, { useRef, useState } from \"react\";\r\nimport { ItemWrap } from \"./styled\";\r\nimport { AiTwotoneDelete } from \"react-icons/ai\";\r\n\r\ntype ItemProps = {\r\n  idx: number;\r\n  text: string;\r\n  done: boolean;\r\n  id: number;\r\n  updateSet: Set<number>;\r\n  setTodoArray: (v: React.SetStateAction<Item[]>) => void;\r\n  handlClickUpdate: () => void;\r\n};\r\n\r\nlet timer: ThrottlingType = null;\r\n\r\nconst Item = ({\r\n  idx,\r\n  text,\r\n  done,\r\n  id,\r\n  updateSet,\r\n  setTodoArray,\r\n  handlClickUpdate,\r\n}: ItemProps) => {\r\n  const labelChecked = useRef<HTMLInputElement>(null);\r\n  const [isChecked, setIsChecked] = useState(done);\r\n\r\n  const handleToggle = () => {\r\n    const { current } = labelChecked;\r\n    if (current) {\r\n      updateSet.add(id);\r\n      setIsChecked(current.checked);\r\n      if (timer) clearTimeout(timer);\r\n      timer = setTimeout(() => handlClickUpdate(), 500);\r\n    }\r\n  };\r\n\r\n  const handleItemRemove = () =>\r\n    setTodoArray((prevArray) =>\r\n      prevArray.filter((item) => item.id !== id && item)\r\n    );\r\n\r\n  return (\r\n    <ItemWrap isDone={isChecked}>\r\n      <label>\r\n        <span>{idx + 1}.</span>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={handleToggle}\r\n          defaultChecked={done}\r\n          ref={labelChecked}\r\n          readOnly\r\n        />\r\n        <span>{text}</span>\r\n      </label>\r\n      <AiTwotoneDelete onClick={handleItemRemove} />\r\n    </ItemWrap>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { ModalWrap, ModalInnerWrap } from \"./styled\";\r\n\r\ntype ModalProps = {\r\n  isOpne: boolean;\r\n  delay: number;\r\n  children: React.ReactNode;\r\n  setIsOpne: (p: React.SetStateAction<boolean>) => void;\r\n  render: (p: () => void) => JSX.Element;\r\n};\r\n\r\nconst Modal = ({ isOpne, delay, setIsOpne, render, children }: ModalProps) => {\r\n  const triggerRef = useRef<boolean>(false);\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    if (isOpne) {\r\n      triggerRef.current = true;\r\n      setVisible(true);\r\n    }\r\n  }, [isOpne]);\r\n\r\n  useEffect(() => {\r\n    const { current } = triggerRef;\r\n    if (!visible && current === true) {\r\n      setTimeout(() => {\r\n        triggerRef.current = false;\r\n        setIsOpne((Prev) => !Prev);\r\n      }, delay);\r\n    }\r\n  }, [visible, setIsOpne, delay]);\r\n\r\n  const close = () => setVisible(false);\r\n\r\n  return (\r\n    <>\r\n      {isOpne && (\r\n        <ModalWrap visible={visible}>\r\n          <ModalInnerWrap visible={visible}>\r\n            {children}\r\n            {render(close)}\r\n          </ModalInnerWrap>\r\n        </ModalWrap>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import { useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { MainWrap, MainInput, FillerButton, ModalFooter } from \"./styled\";\r\nimport { encrypt, decrypt } from \"../helpers/cryto\";\r\nimport { getItem, hasKeys, setItem } from \"../helpers/storageUtils\";\r\nimport Item from \"./Item\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst BTNS: ButtonTypes[] = [\"ALL\", \"DONING\", \"COMPLETED\"];\r\nconst ITEM: Item = { id: 0, text: \"\", done: false };\r\nconst updateSet = new Set<number>();\r\nconst SECRET_KEY = process.env.REACT_APP_SECRET_KEY || \"\";\r\nconst LOCALSTORAGE_NAME =\r\n  process.env.REACT_APP_LOCALSTORAGE_TODOLIST_NAME || \"\";\r\n\r\nconst getInitialValue = (): number => {\r\n  let id: number = 0;\r\n  if (localStorage.hasOwnProperty(LOCALSTORAGE_NAME)) {\r\n    const txet = getItem(LOCALSTORAGE_NAME);\r\n    const deCodedArray = decrypt(txet, SECRET_KEY);\r\n    id = deCodedArray.length + 1;\r\n  }\r\n  return id;\r\n};\r\n\r\nconst getDecodedArray = () => {\r\n  const text = getItem(LOCALSTORAGE_NAME);\r\n  const decodedArray = hasKeys(LOCALSTORAGE_NAME)\r\n    ? decrypt(text, SECRET_KEY)\r\n    : [];\r\n  return decodedArray;\r\n};\r\n\r\nconst Main = () => {\r\n  const firstDecodedArray = useMemo<Item[]>(() => getDecodedArray(), []);\r\n  const initialValue = useMemo<number>(() => getInitialValue(), []);\r\n  const [todoArray, setTodoArray] = useState<Item[]>(firstDecodedArray);\r\n  const [filter, setFilter] = useState<string>(BTNS[0]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const mainInputRef = useRef<HTMLInputElement>(null);\r\n  const nextId = useRef<number>(initialValue);\r\n  const isEnter = useRef<boolean>(false);\r\n\r\n  const makeLocalStorage = useCallback(\r\n    () => setItem(LOCALSTORAGE_NAME, JSON.stringify([])),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!hasKeys(LOCALSTORAGE_NAME)) {\r\n      makeLocalStorage();\r\n    }\r\n    const handleBeforeUnload = () => {\r\n      const encodedArray = encrypt(todoArray, SECRET_KEY);\r\n      setItem(LOCALSTORAGE_NAME, encodedArray);\r\n    };\r\n    window.addEventListener(\"beforeunload\", handleBeforeUnload);\r\n  }, [todoArray, makeLocalStorage]);\r\n\r\n  const enterHandler = (e: OnKeyEvent) => {\r\n    const { key } = e;\r\n    const { current } = mainInputRef;\r\n    if (current && key === \"Enter\") {\r\n      const { value } = current;\r\n      if (value === \"\" || value === \" \") return;\r\n\r\n      if (todoArray.length === 10) {\r\n        current.blur();\r\n        setIsOpen(true);\r\n        return;\r\n      }\r\n\r\n      if (!isEnter.current) {\r\n        isEnter.current = true;\r\n        setTodoArray((prevArray) => [\r\n          ...prevArray,\r\n          { ...ITEM, id: nextId.current++, text: value },\r\n        ]);\r\n        setTimeout(() => (isEnter.current = false), 500);\r\n        current.value = \"\";\r\n        return;\r\n      }\r\n\r\n      current.blur();\r\n      setIsOpen(true);\r\n    }\r\n  };\r\n\r\n  const handlClickUpdate = (btn: string) => () => {\r\n    updateSet.forEach((id) =>\r\n      setTodoArray((prevArray) =>\r\n        prevArray.map((item) =>\r\n          item.id === id ? { ...item, done: !item.done } : item\r\n        )\r\n      )\r\n    );\r\n    updateSet.clear();\r\n    setFilter(btn);\r\n  };\r\n\r\n  const close = useCallback(\r\n    (cb: () => void): JSX.Element => (\r\n      <ModalFooter>\r\n        <button onClick={() => cb()}>확인</button>\r\n      </ModalFooter>\r\n    ),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <MainWrap>\r\n        <Modal\r\n          isOpne={isOpen}\r\n          delay={2000}\r\n          render={close}\r\n          setIsOpne={setIsOpen}\r\n        >\r\n          <div className=\"flex-box\">\r\n            {isEnter.current ? (\r\n              <span>너무 빠릅니다.</span>\r\n            ) : (\r\n              <>\r\n                <span>ToDoList가 꽉 찼습니다.</span>\r\n                <span>최대 10개</span>\r\n              </>\r\n            )}\r\n          </div>\r\n        </Modal>\r\n        <MainInput\r\n          type=\"text\"\r\n          ref={mainInputRef}\r\n          onKeyPress={enterHandler}\r\n          placeholder=\"네가 해야 할 일 을 적어 봐!! 😁\"\r\n          maxLength={20}\r\n        />\r\n        <div>\r\n          {BTNS.map((btn, idx) => (\r\n            <FillerButton\r\n              key={idx}\r\n              onClick={handlClickUpdate(btn)}\r\n              isSelected={btn === filter}\r\n            >\r\n              {btn}\r\n            </FillerButton>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          {todoArray\r\n            .filter((item) =>\r\n              filter === BTNS[0]\r\n                ? item\r\n                : filter === BTNS[1]\r\n                ? !item.done\r\n                : item.done\r\n            )\r\n            .map((item, idx) => (\r\n              <Item\r\n                idx={idx}\r\n                {...item}\r\n                key={item.id}\r\n                updateSet={updateSet}\r\n                handlClickUpdate={handlClickUpdate(filter)}\r\n                setTodoArray={setTodoArray}\r\n              />\r\n            ))}\r\n        </div>\r\n      </MainWrap>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Header from \"./component/Header\";\nimport Main from \"./component/Main\";\nimport { Wrapper } from \"./component/styled\";\n\nexport default function App() {\n  return (\n    <Wrapper>\n      <Header />\n      <Main />\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport GlobalStyle from \"./component/styled\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}